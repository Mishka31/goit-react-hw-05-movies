{"version":3,"sources":["Components/FilmDetails/FilmDetails.js","services/api.js","Components/FilmDetails/FilmDetails.module.css"],"names":["Cast","lazy","Reviews","FilmDetail","props","history","useHistory","location","useLocation","useState","detArray","setDetArray","searchQuery","setSearchQuery","id","match","params","slug","useRouteMatch","url","path","console","log","useEffect","getMovieDetails","then","catch","message","alert","state","from","search","className","s","button","type","onClick","push","mainContainer","container","poster_path","src","alt","about","name","title","vote_average","overview","genres","map","link","to","pathname","fallback","render","BASE","getAPIResponse","response","ok","json","Promise","reject","Error","getMoviesByQuery","query","fetch","getMovieCast","getMovieReviews","getTrendingMovies","module","exports"],"mappings":"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","file":"static/js/FilmDetails.419f084f.chunk.js","sourcesContent":["import { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { Link, Route, useLocation, useHistory, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { getMovieDetails } from \"../../services/api.js\";\r\nimport s from \"./FilmDetails.module.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Cast = lazy(() => import(\"../Cast/Cast.js\" /* webpackChunkName: \"Cast\" */));\r\nconst Reviews = lazy(() => import(\"../Reviews/Reviews.js\" /* webpackChunkName: \"Reviews\" */));\r\nconst STDImg = \"https://image.tmdb.org/t/p/w300\";\r\n\r\nfunction FilmDetail(props) {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [detArray, setDetArray] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const { slug } = props.match.params;\r\n  const id = slug.match(/[a-z0-9]+$/)[0];\r\n  const { url, path } = useRouteMatch();\r\n\r\n  console.log(url, path);\r\n\r\n  useEffect(() => {\r\n    getMovieDetails(id)\r\n      .then(setDetArray)\r\n      .catch(({ message }) => alert(message));\r\n\r\n    setSearchQuery(location.state.from.search);\r\n  }, [location.state.from.search, id]);\r\n\r\n  const onGoBack = () => {\r\n    history.push(location?.state?.from ?? \"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className={s.button} type=\"button\" onClick={onGoBack}>\r\n        â¬… Go back\r\n      </button>\r\n\r\n      <div className={s.mainContainer}>\r\n        <div className={s.container}>\r\n          {detArray.poster_path && <img src={`${STDImg}${detArray.poster_path}`} alt=\"\" />}\r\n          {detArray ? (\r\n            <div className={s.about}>\r\n              <h1>{detArray.name ?? detArray.title}</h1>\r\n              <p>User score: {detArray.vote_average * 10}%</p>\r\n              <h2>Overview</h2>\r\n              <p>{detArray.overview}</p>\r\n              <h2>Genres</h2>\r\n              <p>\r\n                {detArray.genres &&\r\n                  detArray.genres.map(({ id, name }) => <span key={id}> {name} </span>)}\r\n              </p>\r\n              <div className={s.link}>\r\n                <h4>Additional information:</h4>\r\n                <Link\r\n                  to={{\r\n                    pathname: `${url}/cast`,\r\n                    state: {\r\n                      from: {\r\n                        ...location,\r\n                        pathname: location.state.from.pathname,\r\n                        search: searchQuery,\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  Cast\r\n                </Link>\r\n                <Link\r\n                  to={{\r\n                    pathname: `${props.match.url}/reviews`,\r\n                    state: {\r\n                      from: {\r\n                        ...location,\r\n                        pathname: location.state.from.pathname,\r\n                        search: searchQuery,\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  Reviews\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <p className={s.about}>\"The resource you requested could not be found\"</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Suspense fallback={<h1>DOWNLOAD</h1>}>\r\n            <Route path={`${props.match.path}/cast`} render={(props) => <Cast {...props} />} />\r\n            <Route\r\n              path={`${props.match.path}/reviews`}\r\n              render={(props) => <Reviews {...props} />}\r\n            />\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FilmDetail;\r\n","const BASE = {\r\n  URL: \"https://api.themoviedb.org/3\",\r\n  KEY: \"17efd9533173edd759f83ef376bcff4f\",\r\n  LANG: \"language=en-US\",\r\n};\r\n\r\nconst getAPIResponse = (response) => {\r\n  if (response.ok) {\r\n    return response.json();\r\n  }\r\n  return Promise.reject(new Error(\"Something went wrong, go back and try again.\"));\r\n};\r\n\r\nexport function getMoviesByQuery(query) {\r\n  return fetch(\r\n    `${BASE.URL}/search/movie?api_key=${BASE.KEY}&${BASE.LANG}&query=${query}&page=1&include_adult=false`\r\n  ).then((response) => getAPIResponse(response));\r\n}\r\nexport function getMovieDetails(id) {\r\n  return fetch(`${BASE.URL}/movie/${id}?api_key=${BASE.KEY}&${BASE.LANG}`).then((response) =>\r\n    getAPIResponse(response)\r\n  );\r\n}\r\nexport function getMovieCast(id) {\r\n  return fetch(`${BASE.URL}/movie/${id}/credits?api_key=${BASE.KEY}&${BASE.LANG}`).then(\r\n    (response) => getAPIResponse(response)\r\n  );\r\n}\r\nexport function getMovieReviews(id) {\r\n  return fetch(`${BASE.URL}/movie/${id}/reviews?api_key=${BASE.KEY}&${BASE.LANG}&page=1`).then(\r\n    (response) => getAPIResponse(response)\r\n  );\r\n}\r\nexport function getTrendingMovies() {\r\n  return fetch(`${BASE.URL}/trending/movie/day?api_key=${BASE.KEY}`).then((response) =>\r\n    getAPIResponse(response)\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilmDetails_container__2c57r\",\"about\":\"FilmDetails_about__ZaXcm\",\"link\":\"FilmDetails_link__2e1Wm\",\"button\":\"FilmDetails_button__2U9GX\"};"],"sourceRoot":""}